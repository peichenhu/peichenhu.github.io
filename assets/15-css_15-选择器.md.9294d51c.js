import{_ as s,c as n,o as a,Q as l}from"./chunks/framework.03c6a765.js";const d=JSON.parse('{"title":"选择器","description":"","frontmatter":{},"headers":[],"relativePath":"15-css/15-选择器.md","filePath":"15-css/15-选择器.md","lastUpdated":1703663478000}'),p={name:"15-css/15-选择器.md"},e=l(`<h1 id="选择器" tabindex="-1">选择器 <a class="header-anchor" href="#选择器" aria-label="Permalink to &quot;选择器&quot;">​</a></h1><ul><li>通用选择器（*），选择所有元素</li><li>id 选择器（#box），选择 id 为 box 的元素</li><li>类选择器（.one），选择类名为 one 的所有元素</li><li>标签选择器（div），选择标签为 div 的所有元素</li><li>群组选择器（div,p），选择 div、p 的所有元素</li><li>伪类选择器</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">:link</span><span style="color:#E1E4E8;"> 选择未被访问的链接</span></span>
<span class="line"><span style="color:#B392F0;">:visited</span><span style="color:#E1E4E8;"> 选取已被访问的链接</span></span>
<span class="line"><span style="color:#B392F0;">:active</span><span style="color:#E1E4E8;"> 选择活动链接</span></span>
<span class="line"><span style="color:#B392F0;">:hover</span><span style="color:#E1E4E8;"> 鼠标指针浮动在上面的元素</span></span>
<span class="line"><span style="color:#B392F0;">:focus</span><span style="color:#E1E4E8;"> 选择具有焦点的</span></span>
<span class="line"><span style="color:#B392F0;">:first-child</span><span style="color:#E1E4E8;"> 父元素的首个子元素</span></span>
<span class="line"><span style="color:#6A737D;">/* CSS3 */</span></span>
<span class="line"><span style="color:#B392F0;">:first-of-type</span><span style="color:#E1E4E8;"> 表示一组同级元素中其类型的第一个元素</span></span>
<span class="line"><span style="color:#B392F0;">:last-of-type</span><span style="color:#E1E4E8;"> 表示一组同级元素中其类型的最后一个元素</span></span>
<span class="line"><span style="color:#B392F0;">:only-of-type</span><span style="color:#E1E4E8;"> 表示没有同类型兄弟元素的元素</span></span>
<span class="line"><span style="color:#B392F0;">:only-child</span><span style="color:#E1E4E8;"> 表示没有任何兄弟的元素</span></span>
<span class="line"><span style="color:#B392F0;">:nth-child</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">n</span><span style="color:#E1E4E8;">) 根据元素在一组同级中的位置匹配元素</span></span>
<span class="line"><span style="color:#B392F0;">:nth-last-of-type</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">n</span><span style="color:#E1E4E8;">) 匹配给定类型的元素，基于它们在一组兄弟元素中的位置，从末尾开始计数</span></span>
<span class="line"><span style="color:#B392F0;">:last-child</span><span style="color:#E1E4E8;"> 表示一组兄弟元素中的最后一个元素</span></span>
<span class="line"><span style="color:#B392F0;">:root</span><span style="color:#E1E4E8;"> 设置HTML文档</span></span>
<span class="line"><span style="color:#B392F0;">:empty</span><span style="color:#E1E4E8;"> 指定空的元素</span></span>
<span class="line"><span style="color:#B392F0;">:enabled</span><span style="color:#E1E4E8;"> 选择可用元素</span></span>
<span class="line"><span style="color:#B392F0;">:disabled</span><span style="color:#E1E4E8;"> 选择被禁用元素</span></span>
<span class="line"><span style="color:#B392F0;">:checked</span><span style="color:#E1E4E8;"> 选择选中的元素</span></span>
<span class="line"><span style="color:#B392F0;">:not</span><span style="color:#E1E4E8;">(selector) 选择与 &lt;selector</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> 不匹配的所有元素</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">:link</span><span style="color:#24292E;"> 选择未被访问的链接</span></span>
<span class="line"><span style="color:#6F42C1;">:visited</span><span style="color:#24292E;"> 选取已被访问的链接</span></span>
<span class="line"><span style="color:#6F42C1;">:active</span><span style="color:#24292E;"> 选择活动链接</span></span>
<span class="line"><span style="color:#6F42C1;">:hover</span><span style="color:#24292E;"> 鼠标指针浮动在上面的元素</span></span>
<span class="line"><span style="color:#6F42C1;">:focus</span><span style="color:#24292E;"> 选择具有焦点的</span></span>
<span class="line"><span style="color:#6F42C1;">:first-child</span><span style="color:#24292E;"> 父元素的首个子元素</span></span>
<span class="line"><span style="color:#6A737D;">/* CSS3 */</span></span>
<span class="line"><span style="color:#6F42C1;">:first-of-type</span><span style="color:#24292E;"> 表示一组同级元素中其类型的第一个元素</span></span>
<span class="line"><span style="color:#6F42C1;">:last-of-type</span><span style="color:#24292E;"> 表示一组同级元素中其类型的最后一个元素</span></span>
<span class="line"><span style="color:#6F42C1;">:only-of-type</span><span style="color:#24292E;"> 表示没有同类型兄弟元素的元素</span></span>
<span class="line"><span style="color:#6F42C1;">:only-child</span><span style="color:#24292E;"> 表示没有任何兄弟的元素</span></span>
<span class="line"><span style="color:#6F42C1;">:nth-child</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">n</span><span style="color:#24292E;">) 根据元素在一组同级中的位置匹配元素</span></span>
<span class="line"><span style="color:#6F42C1;">:nth-last-of-type</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">n</span><span style="color:#24292E;">) 匹配给定类型的元素，基于它们在一组兄弟元素中的位置，从末尾开始计数</span></span>
<span class="line"><span style="color:#6F42C1;">:last-child</span><span style="color:#24292E;"> 表示一组兄弟元素中的最后一个元素</span></span>
<span class="line"><span style="color:#6F42C1;">:root</span><span style="color:#24292E;"> 设置HTML文档</span></span>
<span class="line"><span style="color:#6F42C1;">:empty</span><span style="color:#24292E;"> 指定空的元素</span></span>
<span class="line"><span style="color:#6F42C1;">:enabled</span><span style="color:#24292E;"> 选择可用元素</span></span>
<span class="line"><span style="color:#6F42C1;">:disabled</span><span style="color:#24292E;"> 选择被禁用元素</span></span>
<span class="line"><span style="color:#6F42C1;">:checked</span><span style="color:#24292E;"> 选择选中的元素</span></span>
<span class="line"><span style="color:#6F42C1;">:not</span><span style="color:#24292E;">(selector) 选择与 &lt;selector</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> 不匹配的所有元素</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><ul><li>伪元素选择器</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">::first-letter</span><span style="color:#E1E4E8;"> 用于选取指定选择器的首字母</span></span>
<span class="line"><span style="color:#B392F0;">::first-line</span><span style="color:#E1E4E8;"> 选取指定选择器的首行</span></span>
<span class="line"><span style="color:#B392F0;">::before</span><span style="color:#E1E4E8;"> 选择器在被选元素的内容前面插入内容</span></span>
<span class="line"><span style="color:#B392F0;">::after</span><span style="color:#E1E4E8;"> 选择器在被选元素的内容后面插入内容</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">::first-letter</span><span style="color:#24292E;"> 用于选取指定选择器的首字母</span></span>
<span class="line"><span style="color:#6F42C1;">::first-line</span><span style="color:#24292E;"> 选取指定选择器的首行</span></span>
<span class="line"><span style="color:#6F42C1;">::before</span><span style="color:#24292E;"> 选择器在被选元素的内容前面插入内容</span></span>
<span class="line"><span style="color:#6F42C1;">::after</span><span style="color:#24292E;"> 选择器在被选元素的内容后面插入内容</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>属性选择器</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">attribute</span><span style="color:#E1E4E8;">] 选择带有 attribute 属性的元素</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">attribute</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">value</span><span style="color:#E1E4E8;">] 选择所有使用 attribute=value 的元素</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">attribute</span><span style="color:#F97583;">~=</span><span style="color:#9ECBFF;">value</span><span style="color:#E1E4E8;">] 选择 attribute 属性 包含 value 的元素</span></span>
<span class="line"><span style="color:#6A737D;">/* CSS3 */</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">attribute</span><span style="color:#F97583;">|=</span><span style="color:#9ECBFF;">value</span><span style="color:#E1E4E8;">] 选择 attribute 属性 以 value 开头的元素</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">attribute</span><span style="color:#F97583;">*=</span><span style="color:#9ECBFF;">value</span><span style="color:#E1E4E8;">] 选择 attribute 属性值 包含 value 的所有元素</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">attribute</span><span style="color:#F97583;">^=</span><span style="color:#9ECBFF;">value</span><span style="color:#E1E4E8;">] 选择 attribute 属性 开头为 value 的所有元素</span></span>
<span class="line"><span style="color:#E1E4E8;">[</span><span style="color:#B392F0;">attribute</span><span style="color:#F97583;">$=</span><span style="color:#9ECBFF;">value</span><span style="color:#E1E4E8;">] 选择 attribute 属性 结尾为 value 的所有元素</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">attribute</span><span style="color:#24292E;">] 选择带有 attribute 属性的元素</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">attribute</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">value</span><span style="color:#24292E;">] 选择所有使用 attribute=value 的元素</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">attribute</span><span style="color:#D73A49;">~=</span><span style="color:#032F62;">value</span><span style="color:#24292E;">] 选择 attribute 属性 包含 value 的元素</span></span>
<span class="line"><span style="color:#6A737D;">/* CSS3 */</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">attribute</span><span style="color:#D73A49;">|=</span><span style="color:#032F62;">value</span><span style="color:#24292E;">] 选择 attribute 属性 以 value 开头的元素</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">attribute</span><span style="color:#D73A49;">*=</span><span style="color:#032F62;">value</span><span style="color:#24292E;">] 选择 attribute 属性值 包含 value 的所有元素</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">attribute</span><span style="color:#D73A49;">^=</span><span style="color:#032F62;">value</span><span style="color:#24292E;">] 选择 attribute 属性 开头为 value 的所有元素</span></span>
<span class="line"><span style="color:#24292E;">[</span><span style="color:#6F42C1;">attribute</span><span style="color:#D73A49;">$=</span><span style="color:#032F62;">value</span><span style="color:#24292E;">] 选择 attribute 属性 结尾为 value 的所有元素</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>关系选择器</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">*</span><span style="color:#E1E4E8;">: 后代通用选择器</span></span>
<span class="line"><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;">: 后代选择器</span></span>
<span class="line"><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;">: 子代选择器</span></span>
<span class="line"><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;">: 邻接兄弟选择器</span></span>
<span class="line"><span style="color:#85E89D;">p</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">~</span><span style="color:#E1E4E8;"> </span><span style="color:#85E89D;">img</span><span style="color:#E1E4E8;">: 通用兄弟选择器，即使它们不直接相邻</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#22863A;">*</span><span style="color:#24292E;">: 后代通用选择器</span></span>
<span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#22863A;">img</span><span style="color:#24292E;">: 后代选择器</span></span>
<span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#22863A;">img</span><span style="color:#24292E;">: 子代选择器</span></span>
<span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#22863A;">img</span><span style="color:#24292E;">: 邻接兄弟选择器</span></span>
<span class="line"><span style="color:#22863A;">p</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">~</span><span style="color:#24292E;"> </span><span style="color:#22863A;">img</span><span style="color:#24292E;">: 通用兄弟选择器，即使它们不直接相邻</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="选择器的优先级" tabindex="-1">选择器的优先级 <a class="header-anchor" href="#选择器的优先级" aria-label="Permalink to &quot;选择器的优先级&quot;">​</a></h2><blockquote><p>!important &gt; 内联 &gt; ID 选择器 &gt; 类选择器 &gt; 标签选择器</p></blockquote><h2 id="js-使用选择器" tabindex="-1">JS 使用选择器 <a class="header-anchor" href="#js-使用选择器" aria-label="Permalink to &quot;JS 使用选择器&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 访问全部</span></span>
<span class="line"><span style="color:#E1E4E8;">document.all; </span><span style="color:#6A737D;">// 等同于 Element.querySelectorAll(&quot;*&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 访问特定</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">querySelector</span><span style="color:#E1E4E8;">(selectors); </span><span style="color:#6A737D;">// 返回单个。</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">querySelectorAll</span><span style="color:#E1E4E8;">(selectors); </span><span style="color:#6A737D;">// 返回集合。</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(id); </span><span style="color:#6A737D;">// 返回单个；id 区分大小写且唯一。</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">getElementsByClassName</span><span style="color:#E1E4E8;">(names); </span><span style="color:#6A737D;">// 返回集合；names 字符串类名，多个类名用空格分隔。</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">getElementsByName</span><span style="color:#E1E4E8;">(name); </span><span style="color:#6A737D;">// 元素属性 name 的属性值（&lt;input name=&quot;up&quot; /&gt; 使用 getElementsByName(&quot;up&quot;)）</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">getElementsByTagName</span><span style="color:#E1E4E8;">(tagName); </span><span style="color:#6A737D;">// 元素的名称（或 “*”）</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">getElementsByTagNameNS</span><span style="color:#E1E4E8;">(namespace, name); </span><span style="color:#6A737D;">// 不常用，略。</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 访问全部</span></span>
<span class="line"><span style="color:#24292E;">document.all; </span><span style="color:#6A737D;">// 等同于 Element.querySelectorAll(&quot;*&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 访问特定</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">querySelector</span><span style="color:#24292E;">(selectors); </span><span style="color:#6A737D;">// 返回单个。</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">querySelectorAll</span><span style="color:#24292E;">(selectors); </span><span style="color:#6A737D;">// 返回集合。</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(id); </span><span style="color:#6A737D;">// 返回单个；id 区分大小写且唯一。</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">getElementsByClassName</span><span style="color:#24292E;">(names); </span><span style="color:#6A737D;">// 返回集合；names 字符串类名，多个类名用空格分隔。</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">getElementsByName</span><span style="color:#24292E;">(name); </span><span style="color:#6A737D;">// 元素属性 name 的属性值（&lt;input name=&quot;up&quot; /&gt; 使用 getElementsByName(&quot;up&quot;)）</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">getElementsByTagName</span><span style="color:#24292E;">(tagName); </span><span style="color:#6A737D;">// 元素的名称（或 “*”）</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">getElementsByTagNameNS</span><span style="color:#24292E;">(namespace, name); </span><span style="color:#6A737D;">// 不常用，略。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="js-dom-操作" tabindex="-1">JS DOM 操作 <a class="header-anchor" href="#js-dom-操作" aria-label="Permalink to &quot;JS DOM 操作&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 批量操作</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">replaceChildren</span><span style="color:#E1E4E8;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#E1E4E8;"> paramN); </span><span style="color:#6A737D;">// children 全部替换</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">before</span><span style="color:#E1E4E8;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#E1E4E8;"> paramN); </span><span style="color:#6A737D;">// self 前插入</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">after</span><span style="color:#E1E4E8;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#E1E4E8;"> paramN); </span><span style="color:#6A737D;">// self 后插入</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">prepend</span><span style="color:#E1E4E8;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#E1E4E8;"> paramN); </span><span style="color:#6A737D;">// children 前插入</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">append</span><span style="color:#E1E4E8;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#E1E4E8;"> paramN); </span><span style="color:#6A737D;">// children 后插入</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 单个操作</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">appendChild</span><span style="color:#E1E4E8;">(newNode); </span><span style="color:#6A737D;">// children 后插入</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">insertBefore</span><span style="color:#E1E4E8;">(newNode, referenceNode); </span><span style="color:#6A737D;">// referenceNode 前插入</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">removeChild</span><span style="color:#E1E4E8;">(Node); </span><span style="color:#6A737D;">// child 删除</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">replaceChild</span><span style="color:#E1E4E8;">(newChild, oldChild); </span><span style="color:#6A737D;">// oldChild 替换</span></span>
<span class="line"><span style="color:#E1E4E8;">Element.</span><span style="color:#B392F0;">remove</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// self 删除</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 批量操作</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">replaceChildren</span><span style="color:#24292E;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#24292E;"> paramN); </span><span style="color:#6A737D;">// children 全部替换</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">before</span><span style="color:#24292E;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#24292E;"> paramN); </span><span style="color:#6A737D;">// self 前插入</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">after</span><span style="color:#24292E;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#24292E;"> paramN); </span><span style="color:#6A737D;">// self 后插入</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">prepend</span><span style="color:#24292E;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#24292E;"> paramN); </span><span style="color:#6A737D;">// children 前插入</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">append</span><span style="color:#24292E;">(param1, param2, </span><span style="color:#6A737D;">/* …, */</span><span style="color:#24292E;"> paramN); </span><span style="color:#6A737D;">// children 后插入</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 单个操作</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">appendChild</span><span style="color:#24292E;">(newNode); </span><span style="color:#6A737D;">// children 后插入</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">insertBefore</span><span style="color:#24292E;">(newNode, referenceNode); </span><span style="color:#6A737D;">// referenceNode 前插入</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">removeChild</span><span style="color:#24292E;">(Node); </span><span style="color:#6A737D;">// child 删除</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">replaceChild</span><span style="color:#24292E;">(newChild, oldChild); </span><span style="color:#6A737D;">// oldChild 替换</span></span>
<span class="line"><span style="color:#24292E;">Element.</span><span style="color:#6F42C1;">remove</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// self 删除</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>`,15),o=[e];function t(r,c,i,y,E,m){return a(),n("div",null,o)}const b=s(p,[["render",t]]);export{d as __pageData,b as default};
